{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "17642556706807418734"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "site-cert-checker",
      "metadata": {
        "description": "Base name to use for the deployment"
      }
    },
    "sitesToCheck": {
      "type": "string",
      "defaultValue": "example.com|another.example.com",
      "metadata": {
        "description": "A list of pipe (|) separated hostnames to check"
      }
    },
    "expiryGraceDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "The number of days prior to expiry to allow before warning"
      }
    },
    "emailAddress": {
      "type": "string",
      "metadata": {
        "description": "The email address to send expiry notifications to"
      }
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    "storageAccountName": "[format('{0}{1}', replace(substring(parameters('baseName'), 0, 10), '-', ''), uniqueString(resourceGroup().id))]",
    "functionPlanName": "[format('{0}{1}', parameters('baseName'), uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('{0}{1}', parameters('baseName'), uniqueString(resourceGroup().id))]",
    "functionAppName": "[parameters('baseName')]",
    "logicAppName": "[format('{0}{1}', parameters('baseName'), uniqueString(resourceGroup().id))]",
    "workflow": "[json(replace('{\n\t\"definition\": {\n\t\t\"$schema\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\",\n\t\t\"actions\": {\n\t\t\t\"Response\": {\n\t\t\t\t\"inputs\": {\n\t\t\t\t\t\"statusCode\": 200\n\t\t\t\t},\n\t\t\t\t\"kind\": \"Http\",\n\t\t\t\t\"runAfter\": {\n\t\t\t\t\t\"Send_an_email_(V2)\": [\n\t\t\t\t\t\t\"Succeeded\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"type\": \"Response\"\n\t\t\t},\n\t\t\t\"Send_an_email_(V2)\": {\n\t\t\t\t\"inputs\": {\n\t\t\t\t\t\"body\": {\n\t\t\t\t\t\t\"Body\": \"<p>Site: <a href=\\\"https://@{triggerBody()?[''site'']}\\\">@{triggerBody()?[''site'']}</a></p><p>ValidFrom: @{triggerBody()?[''validFrom'']}</p><p>ValidTo: @{triggerBody()?[''validTo'']}</p><p>Message: @{triggerBody()?[''message'']}</p>\",\n\t\t\t\t\t\t\"Subject\": \"site-cert-checker warning for @{triggerBody()?[''site'']}\",\n\t\t\t\t\t\t\"To\": \"test@example.com\"\n\t\t\t\t\t},\n\t\t\t\t\t\"host\": {\n\t\t\t\t\t\t\"connection\": {\n\t\t\t\t\t\t\t\"name\": \"@parameters(''$connections'')[''office365''][''connectionId'']\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"method\": \"post\",\n\t\t\t\t\t\"path\": \"/v2/Mail\"\n\t\t\t\t},\n\t\t\t\t\"runAfter\": {},\n\t\t\t\t\"type\": \"ApiConnection\"\n\t\t\t}\n\t\t},\n\t\t\"contentVersion\": \"1.0.0.0\",\n\t\t\"outputs\": {},\n\t\t\"parameters\": {\n\t\t\t\"$connections\": {\n\t\t\t\t\"defaultValue\": {},\n\t\t\t\t\"type\": \"Object\"\n\t\t\t}\n\t\t},\n\t\t\"triggers\": {\n\t\t\t\"manual\": {\n\t\t\t\t\"inputs\": {\n\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"validFrom\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"validTo\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"site\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"message\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"type\": \"object\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"kind\": \"Http\",\n\t\t\t\t\"type\": \"Request\"\n\t\t\t}\n\t\t}\n\t},\n\t\"parameters\": {\n\t\t\"$connections\": {\n\t\t\t\"value\": {\n\t\t\t\t\"office365\": {\n\t\t\t\t\t\"connectionId\": \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/site-cert-checker-test/providers/Microsoft.Web/connections/office365\",\n\t\t\t\t\t\"connectionName\": \"office365\",\n\t\t\t\t\t\"id\": \"/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Web/locations/northeurope/managedApis/office365\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}', 'test@example.com', parameters('emailAddress')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[variables('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "tags": {
        "[format('hidden-link:/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}', subscription().id, resourceGroup().name, variables('functionAppName'))]": "Resource"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[format('{0}-office365', variables('logicAppName'))]",
      "location": "[variables('location')]",
      "properties": {
        "displayName": "[parameters('emailAddress')]",
        "api": {
          "name": "office365",
          "brandColor": "#0078D4",
          "type": "Microsoft.Web/locations/managedApis",
          "displayName": "Office 365 Outlook",
          "description": "Microsoft Office 365 is a cloud-based service that is designed to help meet your organization's needs for robust security, reliability, and user productivity.",
          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1521/1.0.1521.2572/office365/icon.png",
          "id": "[format('/subscriptions/67ce421f-bd68-463d-85ff-e89394ca5ce6/providers/Microsoft.Web/locations/{0}/managedApis/office365', variables('location'))]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('logicAppName')]",
      "location": "[variables('location')]",
      "properties": {
        "state": "Enabled",
        "definition": "[variables('workflow').definition]",
        "parameters": {
          "$connections": {
            "value": {
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', format('{0}-office365', variables('logicAppName')))]",
                "connectionName": "office365",
                "id": "[format('{0}/providers/Microsoft.Web/locations/{1}/managedApis/office365', subscription().id, variables('location'))]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', format('{0}-office365', variables('logicAppName')))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-10-01",
      "name": "[variables('functionPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('functionAppName')]",
      "location": "[variables('location')]",
      "kind": "functionapp",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionPlanName'))]",
        "clientAffinityEnabled": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~14"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://github.com/stuartleeks/site-cert-checker/releases/latest/download/functions.zip"
            },
            {
              "name": "SitesToCheck",
              "value": "[parameters('sitesToCheck')]"
            },
            {
              "name": "ExpiryGraceDays",
              "value": "[string(parameters('expiryGraceDays'))]"
            },
            {
              "name": "ExpiryPostUrl",
              "value": "[listCallbackURL(format('{0}/triggers/manual', resourceId('Microsoft.Logic/workflows', variables('logicAppName'))), '2016-06-01').value]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionPlanName'))]",
        "[resourceId('Microsoft.Logic/workflows', variables('logicAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ]
}